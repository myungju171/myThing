buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	// restdocs
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	// querydsl
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

configurations {
	asciidoctorExt
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	//Java 8 date/time type java.time.LocalDateTime not supported by default 직렬화 역직렬화 문제 해결
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	//security
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	//mockito-inline
	testImplementation group: 'org.mockito', name: 'mockito-inline', version: '4.8.1'

	//querydsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation "com.querydsl:querydsl-core:${queryDslVersion}"

	// mapstruct
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	//s3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.315'

	// aop
//	implementation 'org.springframework.boot:spring-boot-starter-aop'

	//jjwt(jwt 변환 라이브러리)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly	'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//mvnRepository jwt토큰 base64로 인코딩해주는 라이브러리
	// https://mvnrepository.com/artifact/com.auth0/java-jwt
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.0.0'

	// test에서 SLF4J 사용 가능호도록
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// asciidoctorExtensions
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.6.RELEASE'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.6.RELEASE'

	// embedded-redis
//	implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'

	// testcontainers
	testImplementation "org.testcontainers:junit-jupiter:1.17.3"
	testImplementation "org.testcontainers:mysql:1.18.3"

	// java mail
//	implementation group: 'javax.mail', name: 'mail', version: '1.4.7'

	// phone Auth Service
	// https://mvnrepository.com/artifact/net.nurigo/sdk
	implementation 'net.nurigo:sdk:4.2.7'

	//@Nullable 어노테이션 사용시 빌드 에러 막는 의존성
	implementation 'com.google.code.findbugs:jsr305:3.0.2'

	// json (json 객체 다루기)
	implementation group: 'org.json', name: 'json', version: '20230227'
}

tasks.named('test') {
	useJUnitPlatform()
}


ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	println "asciidoctor output: ${asciidoctor.outputDir}"
	from file("build/docs/asciidoc/")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

bootJar {
	enabled = true
	dependsOn copyDocument
	from ("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}

// querydsl
def querydslDir = "$buildDir/generated/'querydsl'"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
